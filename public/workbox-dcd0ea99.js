define("./workbox-dcd0ea99.js",["exports"],(function(e){"use strict";try{self["workbox:core:5.1.4"]&&_()}catch(e){}const t=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class s extends Error{constructor(e,s){super(t(e,s)),this.name=e,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const n=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,s="GET"){this.handler=n(t),this.match=e,this.method=s}}class r extends i{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}class c{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:i}=this.findMatchingRoute({url:s,request:e,event:t});let r,c=i&&i.handler;if(!c&&this.s&&(c=this.s),c){try{r=c.handle({url:s,request:e,event:t,params:n})}catch(e){r=Promise.reject(e)}return r instanceof Promise&&this.i&&(r=r.catch(n=>this.i.handle({url:s,request:e,event:t}))),r}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const i of n){let n;const r=i.match({url:e,request:t,event:s});if(r)return n=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(n=void 0),{route:i,params:n}}return{}}setDefaultHandler(e){this.s=n(e)}setCatchHandler(e){this.i=n(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new s("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}let a;const o=()=>(a||(a=new c,a.addFetchListener(),a.addCacheListener()),a);try{self["workbox:core:5.1.4"]&&_()}catch(e){}const h=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class u extends Error{constructor(e,t){super(h(e,t)),this.name=e,this.details=t}}const l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[l.prefix,e,l.suffix].filter(e=>e&&e.length>0).join("-"),w=e=>e||f(l.runtime);function p(e){e.then(()=>{})}const d=new Set;class y{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.h=e,this.u=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.h,this.u);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:i,includeKeys:r=!1}={}){return await this.transaction([e],"readonly",(c,a)=>{const o=c.objectStore(e),h=t?o.index(t):o,u=[],l=h.openCursor(s,n);l.onsuccess=()=>{const e=l.result;e?(u.push(r?e:e.value),i&&u.length>=i?a(u):e.continue()):a(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,i)=>{const r=this.o.transaction(e,t);r.onabort=()=>i(r.error),r.oncomplete=()=>n(),s(r,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,i)=>{const r=s.objectStore(t),c=r[e].apply(r,n);c.onsuccess=()=>i(c.result)})}close(){this.o&&(this.o.close(),this.o=null)}}y.prototype.OPEN_TIMEOUT=2e3;const g={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(g))for(const s of t)s in IDBObjectStore.prototype&&(y.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.4"]&&_()}catch(e){}const m=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class q{constructor(e){this.m=e,this.o=new y("workbox-expiration",1,{onupgradeneeded:e=>this.q(e)})}q(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.m)}async setTimestamp(e,t){const s={url:e=m(e),timestamp:t,cacheName:this.m,id:this.v(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this.v(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const i=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),r=[];let c=0;i.onsuccess=()=>{const s=i.result;if(s){const n=s.value;n.cacheName===this.m&&(e&&n.timestamp<e||t&&c>=t?r.push(s.value):c++),s.continue()}else n(r)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}v(e){return this.m+"|"+m(e)}}class v{constructor(e,t={}){this.R=!1,this.U=!1,this.N=t.maxEntries,this.L=t.maxAgeSeconds,this.m=e,this._=new q(e)}async expireEntries(){if(this.R)return void(this.U=!0);this.R=!0;const e=this.L?Date.now()-1e3*this.L:0,t=await this._.expireEntries(e,this.N),s=await self.caches.open(this.m);for(const e of t)await s.delete(e);this.R=!1,this.U&&(this.U=!1,p(this.expireEntries()))}async updateTimestamp(e){await this._.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.L){return await this._.getTimestamp(e)<Date.now()-1e3*this.L}return!1}async delete(){this.U=!1,await this._.expireEntries(1/0)}}try{self["workbox:core:5.1.4"]&&_()}catch(e){}const R=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class U extends Error{constructor(e,t){super(R(e,t)),this.name=e,this.details=t}}const x={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},N=e=>[x.prefix,e,x.suffix].filter(e=>e&&e.length>0).join("-"),L=e=>e||N(x.runtime),O=new Set;const E=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),""),b=(e,t)=>e.filter(e=>t in e),D=async({request:e,mode:t,plugins:s=[]})=>{const n=b(s,"cacheKeyWillBeUsed");let i=e;for(const e of n)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},K=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:i=[]})=>{const r=await self.caches.open(e),c=await D({plugins:i,request:t,mode:"read"});let a=await r.match(c,n);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;a=await i.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:c})}return a},M=async({cacheName:e,request:t,response:s,event:n,plugins:i=[],matchOptions:r})=>{const c=await D({plugins:i,request:t,mode:"write"});if(!s)throw new U("cache-put-with-no-response",{url:E(c.url)});const a=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let i=t,r=!1;for(const t of n)if("cacheWillUpdate"in t){r=!0;const n=t.cacheWillUpdate;if(i=await n.call(t,{request:e,response:i,event:s}),!i)break}return r||(i=i&&200===i.status?i:void 0),i||null})({event:n,plugins:i,response:s,request:c});if(!a)return;const o=await self.caches.open(e),h=b(i,"cacheDidUpdate"),u=h.length>0?await K({cacheName:e,matchOptions:r,request:c}):null;try{await o.put(c,a)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of O)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:n,oldResponse:u,newResponse:a,request:c})},P=K,S=async({request:e,fetchOptions:t,event:s,plugins:n=[]})=>{if("string"==typeof e&&(e=new Request(e)),s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const i=b(n,"fetchDidFail"),r=i.length>0?e.clone():null;try{for(const t of n)if("requestWillFetch"in t){const n=t.requestWillFetch,i=e.clone();e=await n.call(t,{request:i,event:s})}}catch(e){throw new U("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let i;i="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of n)"fetchDidSucceed"in e&&(i=await e.fetchDidSucceed.call(e,{event:s,request:c,response:i}));return i}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:s,originalRequest:r.clone(),request:c.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}const T={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};try{self["workbox:core:5.1.4"]&&_()}catch(e){}try{self["workbox:core:5.1.4"]&&_()}catch(e){}const k={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},A=e=>[k.prefix,e,k.suffix].filter(e=>e&&e.length>0).join("-"),C=e=>e||A(k.precache),F=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),""),W=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class B extends Error{constructor(e,t){super(W(e,t)),this.name=e,this.details=t}}const I=new Set;const H=(e,t)=>e.filter(e=>t in e),j=async({request:e,mode:t,plugins:s=[]})=>{const n=H(s,"cacheKeyWillBeUsed");let i=e;for(const e of n)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},J=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:i=[]})=>{const r=await self.caches.open(e),c=await j({plugins:i,request:t,mode:"read"});let a=await r.match(c,n);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;a=await i.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:c})}return a},Q=async({cacheName:e,request:t,response:s,event:n,plugins:i=[],matchOptions:r})=>{const c=await j({plugins:i,request:t,mode:"write"});if(!s)throw new B("cache-put-with-no-response",{url:F(c.url)});const a=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let i=t,r=!1;for(const t of n)if("cacheWillUpdate"in t){r=!0;const n=t.cacheWillUpdate;if(i=await n.call(t,{request:e,response:i,event:s}),!i)break}return r||(i=i&&200===i.status?i:void 0),i||null})({event:n,plugins:i,response:s,request:c});if(!a)return;const o=await self.caches.open(e),h=H(i,"cacheDidUpdate"),u=h.length>0?await J({cacheName:e,matchOptions:r,request:c}):null;try{await o.put(c,a)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of I)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:n,oldResponse:u,newResponse:a,request:c})},G=async({request:e,fetchOptions:t,event:s,plugins:n=[]})=>{if("string"==typeof e&&(e=new Request(e)),s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const i=H(n,"fetchDidFail"),r=i.length>0?e.clone():null;try{for(const t of n)if("requestWillFetch"in t){const n=t.requestWillFetch,i=e.clone();e=await n.call(t,{request:i,event:s})}}catch(e){throw new B("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let i;i="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of n)"fetchDidSucceed"in e&&(i=await e.fetchDidSucceed.call(e,{event:s,request:c,response:i}));return i}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:s,originalRequest:r.clone(),request:c.clone()});throw e}};let V;async function $(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=t?t(n):n,r=function(){if(void 0===V){const e=new Response("");if("body"in e)try{new Response(e.body),V=!0}catch(e){V=!1}V=!1}return V}()?s.body:await s.blob();return new Response(r,i)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function z(e){if(!e)throw new B("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new B("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(s,location.href),i=new URL(s,location.href);return n.searchParams.set("__WB_REVISION__",t),{cacheKey:n.href,url:i.href}}class X{constructor(e){this.m=C(e),this.O=new Map,this.D=new Map,this.K=new Map}addToCacheList(e){const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:n}=z(s),i="string"!=typeof s&&s.revision?"reload":"default";if(this.O.has(n)&&this.O.get(n)!==e)throw new B("add-to-cache-list-conflicting-entries",{firstEntry:this.O.get(n),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this.K.has(e)&&this.K.get(e)!==s.integrity)throw new B("add-to-cache-list-conflicting-integrities",{url:n});this.K.set(e,s.integrity)}if(this.O.set(n,e),this.D.set(n,i),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],i=await self.caches.open(this.m),r=await i.keys(),c=new Set(r.map(e=>e.url));for(const[e,t]of this.O)c.has(t)?n.push(e):s.push({cacheKey:t,url:e});const a=s.map(({cacheKey:s,url:n})=>{const i=this.K.get(s),r=this.D.get(n);return this.M({cacheKey:s,cacheMode:r,event:e,integrity:i,plugins:t,url:n})});await Promise.all(a);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.m),t=await e.keys(),s=new Set(this.O.values()),n=[];for(const i of t)s.has(i.url)||(await e.delete(i),n.push(i.url));return{deletedURLs:n}}async M({cacheKey:e,url:t,cacheMode:s,event:n,plugins:i,integrity:r}){const c=new Request(t,{integrity:r,cache:s,credentials:"same-origin"});let a,o=await G({event:n,plugins:i,request:c});for(const e of i||[])"cacheWillUpdate"in e&&(a=e);if(!(a?await a.cacheWillUpdate({event:n,request:c,response:o}):o.status<400))throw new B("bad-precaching-response",{url:t,status:o.status});o.redirected&&(o=await $(o)),await Q({event:n,plugins:i,response:o,request:e===t?c:new Request(e),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.O}getCachedURLs(){return[...this.O.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.O.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new B("missing-precache-entry",{cacheName:this.m,url:t instanceof Request?t.url:t})}catch(s){if(e)return fetch(t);throw s}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new B("non-precached-url",{url:e});const s=this.createHandler(t),n=new Request(e);return()=>s({request:n})}}let Y;const Z=()=>(Y||(Y=new X),Y);const ee=(e,t)=>{const s=Z().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:i}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const c=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(r,t);if(yield c.href,s&&c.pathname.endsWith("/")){const e=new URL(c.href);e.pathname+=s,yield e.href}if(n){const e=new URL(c.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:r});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let te=!1;function se(e){te||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const i=C();self.addEventListener("fetch",r=>{const c=ee(r.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!c)return;let a=self.caches.open(i).then(e=>e.match(c)).then(e=>e||fetch(c));r.respondWith(a)})})(e),te=!0)}const ne=[],ie={get:()=>ne,add(e){ne.push(...e)}},re=e=>{const t=Z(),s=ie.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},ce=e=>{const t=Z();e.waitUntil(t.activate())};e.CacheFirst=class{constructor(e={}){this.m=L(e.cacheName),this.P=e.plugins||[],this.S=e.fetchOptions,this.T=e.matchOptions}async handle({event:e,request:t}){"string"==typeof t&&(t=new Request(t));let s,n=await P({cacheName:this.m,request:t,event:e,matchOptions:this.T,plugins:this.P});if(!n)try{n=await this.k(t,e)}catch(e){s=e}if(!n)throw new U("no-response",{url:t.url,error:s});return n}async k(e,t){const s=await S({request:e,event:t,fetchOptions:this.S,plugins:this.P}),n=s.clone(),i=M({cacheName:this.m,request:e,response:n,event:t,plugins:this.P});if(t)try{t.waitUntil(i)}catch(e){}return s}},e.ExpirationPlugin=class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const i=this.A(n),r=this.C(s);p(r.expireEntries());const c=r.updateTimestamp(t.url);if(e)try{e.waitUntil(c)}catch(e){}return i?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.C(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.F=e,this.L=e.maxAgeSeconds,this.W=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),d.add(t))}C(e){if(e===w())throw new u("expire-custom-caches-only");let t=this.W.get(e);return t||(t=new v(e,this.F),this.W.set(e,t)),t}A(e){if(!this.L)return!0;const t=this.B(e);if(null===t)return!0;return t>=Date.now()-1e3*this.L}B(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.W)await self.caches.delete(e),await t.delete();this.W=new Map}},e.NetworkFirst=class{constructor(e={}){if(this.m=L(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.P=t?e.plugins:[T,...e.plugins]}else this.P=[T];this.I=e.networkTimeoutSeconds||0,this.S=e.fetchOptions,this.T=e.matchOptions}async handle({event:e,request:t}){const s=[];"string"==typeof t&&(t=new Request(t));const n=[];let i;if(this.I){const{id:r,promise:c}=this.H({request:t,event:e,logs:s});i=r,n.push(c)}const r=this.j({timeoutId:i,request:t,event:e,logs:s});n.push(r);let c=await Promise.race(n);if(c||(c=await r),!c)throw new U("no-response",{url:t.url});return c}H({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.J({request:e,event:s}))},1e3*this.I)}),id:n}}async j({timeoutId:e,request:t,logs:s,event:n}){let i,r;try{r=await S({request:t,event:n,fetchOptions:this.S,plugins:this.P})}catch(e){i=e}if(e&&clearTimeout(e),i||!r)r=await this.J({request:t,event:n});else{const e=r.clone(),s=M({cacheName:this.m,request:t,response:e,event:n,plugins:this.P});if(n)try{n.waitUntil(s)}catch(e){}}return r}J({event:e,request:t}){return P({cacheName:this.m,request:t,event:e,matchOptions:this.T,plugins:this.P})}},e.StaleWhileRevalidate=class{constructor(e={}){if(this.m=L(e.cacheName),this.P=e.plugins||[],e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.P=t?e.plugins:[T,...e.plugins]}else this.P=[T];this.S=e.fetchOptions,this.T=e.matchOptions}async handle({event:e,request:t}){"string"==typeof t&&(t=new Request(t));const s=this.k({request:t,event:e});let n,i=await P({cacheName:this.m,request:t,event:e,matchOptions:this.T,plugins:this.P});if(i){if(e)try{e.waitUntil(s)}catch(n){}}else try{i=await s}catch(e){n=e}if(!i)throw new U("no-response",{url:t.url,error:n});return i}async k({request:e,event:t}){const s=await S({request:e,event:t,fetchOptions:this.S,plugins:this.P}),n=M({cacheName:this.m,request:e,response:s.clone(),event:t,plugins:this.P});if(t)try{t.waitUntil(n)}catch(e){}return s}},e.cleanupOutdatedCaches=function(){self.addEventListener("activate",e=>{const t=C();e.waitUntil((async(e,t="-precache-")=>{const s=(await self.caches.keys()).filter(s=>s.includes(t)&&s.includes(self.registration.scope)&&s!==e);return await Promise.all(s.map(e=>self.caches.delete(e))),s})(t).then(e=>{}))})},e.clientsClaim=function(){self.addEventListener("activate",()=>self.clients.claim())},e.precacheAndRoute=function(e,t){!function(e){Z().addToCacheList(e),e.length>0&&(self.addEventListener("install",re),self.addEventListener("activate",ce))}(e),se(t)},e.registerRoute=function(e,t,n){let c;if("string"==typeof e){const s=new URL(e,location.href);c=new i(({url:e})=>e.href===s.href,t,n)}else if(e instanceof RegExp)c=new r(e,t,n);else if("function"==typeof e)c=new i(e,t,n);else{if(!(e instanceof i))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});c=e}return o().registerRoute(c),c},e.skipWaiting=function(){self.addEventListener("install",()=>self.skipWaiting())}}));
